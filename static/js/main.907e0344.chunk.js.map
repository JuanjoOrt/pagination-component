{"version":3,"sources":["Pagination/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","pageMin","pageMax","page","onClick","isTheActualPageTheMin","isTheActualPageTheMax","isTheActualPageAlmostMin","isTheActualPageAlmostMax","middlePage","className","App","useState","actualPage","setActualPage","style","marginTop","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.907e0344.chunk.js","sourcesContent":["import './Pagination.css';\r\n\r\nexport default function Pagination({pageMin, pageMax, page, onClick}){\r\n    const isTheActualPageTheMin = page === pageMin;\r\n    const isTheActualPageTheMax = page === pageMax;\r\n    const isTheActualPageAlmostMin = page === pageMin + 1;\r\n    const isTheActualPageAlmostMax = page === pageMax - 1;\r\n    const middlePage = !isTheActualPageTheMin && !isTheActualPageTheMax && !isTheActualPageAlmostMin && !isTheActualPageAlmostMax\r\n\r\n\r\n    \r\n    return <div className='pagination-component'>\r\n        <span className='cajita' onClick={() => onClick(pageMin)}>{'<<'}</span>\r\n        {isTheActualPageTheMin && <>\r\n                <span className='cajita-clear' />\r\n                <span className='cajita-clear' />\r\n                <span className='cajita-actual'>{page}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 1)}>{page + 1}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 2)}>{page + 2}</span>\r\n            </>\r\n        }\r\n\r\n        {isTheActualPageAlmostMin && <>\r\n                <span className='cajita-clear' />\r\n                <span className='cajita' onClick={() => onClick(page - 1)} >{page - 1}</span>\r\n                <span className='cajita-actual'>{page}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 1)} >{page + 1}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 2)} >{page + 2}</span>\r\n                </>\r\n        }\r\n\r\n        {middlePage \r\n            &&  <>\r\n                <span className='cajita' onClick={() => onClick(page - 2)}>{page - 2}</span>\r\n                <span className='cajita' onClick={() => onClick(page - 1)}>{page - 1}</span>\r\n                <span className='cajita-actual'>{page}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 1)}>{page + 1}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 2)}>{page + 2}</span>\r\n            </>\r\n        }\r\n        \r\n        {isTheActualPageAlmostMax && <>\r\n                <span className='cajita' onClick={() => onClick(page - 2)} >{page - 2}</span>\r\n                <span className='cajita' onClick={() => onClick(page - 1)} >{page - 1}</span>\r\n                <span className='cajita-actual'>{page}</span>\r\n                <span className='cajita' onClick={() => onClick(page + 1)}>{page + 1}</span>\r\n                <span className='cajita-clear' />\r\n                </>\r\n        }\r\n\r\n        {isTheActualPageTheMax && <>\r\n                <span className='cajita' onClick={() => onClick(page - 2)}>{page - 2}</span>\r\n                <span className='cajita' onClick={() => onClick(page - 1)}>{page - 1}</span>\r\n                <span className='cajita-actual'>{page}</span>\r\n                <span className='cajita-clear' />\r\n                <span className='cajita-clear' />\r\n            </>\r\n        }\r\n\r\n        <span className='cajita' onClick={() => onClick(pageMax)}>{'>>'}</span>\r\n        \r\n    </div>\r\n}","import Pagination from './Pagination/Pagination'\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [actualPage, setActualPage] = useState(1)  \n\n  const onClick = (page) =>{\n    setActualPage(page)\n  }\n\n  return (\n    <div className=\"App\">\n\n      <div style={{marginTop: '5rem', marginBottom: '1rem'}}>\n        <span>Pagina elegida: {actualPage}</span>\n      </div>\n      <Pagination pageMin={1} pageMax={32} page={actualPage} onClick={onClick}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}